# Generated by Django 5.2.7 on 2025-10-18 18:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cpf', models.CharField(help_text='CPF do servidor.', max_length=15, unique=True, verbose_name='CPF')),
                ('contato', models.CharField(help_text='Telefone de contato do servidor.', max_length=15, verbose_name='Contato')),
                ('groups', models.ManyToManyField(blank=True, help_text='Os grupos a que este usuário pertence. Um usuário terá todas as permissões concedidas a cada um dos seus grupos.', related_name='usuario_set', related_query_name='usuario', to='auth.group', verbose_name='grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissões específicas para este usuário.', related_name='usuario_set', related_query_name='usuario', to='auth.permission', verbose_name='permissões do usuário')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Chave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Ex: Laboratório de Redes, Sala 203.', max_length=100, unique=True, verbose_name='Nome da Chave')),
                ('descricao', models.TextField(blank=True, help_text='Informações adicionais sobre a chave ou o local.', verbose_name='Descrição')),
                ('status', models.CharField(choices=[('disponivel', 'Disponível'), ('em_uso', 'Em Uso')], default='disponivel', max_length=20, verbose_name='Status Atual')),
                ('excluido', models.BooleanField(default=False, help_text='Se marcado, a chave não aparecerá para novos empréstimos, mas será mantida no histórico.', verbose_name='Excluído (Logicamente)')),
                ('grupo_permissao', models.ForeignKey(blank=True, help_text='Se definido, apenas usuários deste grupo podem retirar esta chave.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.group', verbose_name='Grupo com Permissão')),
                ('portador_atual', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chaves_em_posse', to=settings.AUTH_USER_MODEL, verbose_name='Portador Atual')),
            ],
            options={
                'verbose_name': 'Chave',
                'verbose_name_plural': 'Chaves',
            },
        ),
        migrations.CreateModel(
            name='HistoricoEmprestimo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_hora', models.DateTimeField(auto_now_add=True, verbose_name='Data e Hora da Ação')),
                ('acao', models.CharField(choices=[('retirada', 'Retirada'), ('devolucao', 'Devolução')], max_length=20, verbose_name='Ação Realizada')),
                ('chave', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='historico', to='principal.chave', verbose_name='Chave Transacionada')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário Responsável')),
            ],
            options={
                'verbose_name': 'Histórico de Empréstimo',
                'verbose_name_plural': 'Históricos de Empréstimos',
                'ordering': ['-data_hora'],
            },
        ),
    ]
